name: API Test with Curl

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.runCommand({ ping: 1 })' --quiet"
          --health-interval 10s
          --health-timeout 10s  # Increased timeout for more robustness
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install Flask Flask-PyMongo
        # Include other dependencies as needed

    - name: Start Flask server
      run: |
        export FLASK_APP=app.py
        flask run --host=0.0.0.0 --port=5000 &  # Explicitly set host and port
        sleep 10  # Increased sleep to ensure the server is fully started

    - name: Test registration endpoint
      run: |
        curl --fail --show-error --verbose \
        -X POST http://localhost:5000/api/auth/register \
        -H "Content-Type: application/json" \
        -d '{"name":"Test","last_name":"User","age":30,"phone":"1234567890","email":"testuser@example.com","password":"password123"}'

    - name: Test login endpoint
      run: |
        curl --fail --show-error --verbose \
        -X POST http://localhost:5000/api/auth/login \
        -H "Content-Type: application/json" \
        -d '{"email":"testuser@example.com","password":"password123"}'
